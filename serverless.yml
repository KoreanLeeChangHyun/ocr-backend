service: ocr-backend

provider:
  name: aws
  runtime: python3.9
  region: ap-northeast-2
  stage: prod
  environment:
    OPENAI_API_KEY: ${env:OPENAI_API_KEY}
    S3_BUCKET: "ocr-temp-storage"
  timeout: 30
  memorySize: 2048
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: 
            - "arn:aws:logs:*:*:*"
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
            - s3:DeleteObject
            - s3:ListBucket
          Resource: 
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"

functions:
  api:
    handler: main.handler
    events:
      - http:
          path: /api/{proxy+}
          method: any
          cors:
            origin: "*"
            headers:
              - Content-Type
              - Authorization
              - X-Amz-Date
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
            maxAge: 86400

resources:
  Resources:
    OcrStorageBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: ${self:provider.environment.S3_BUCKET}
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
              AllowedOrigins: ['*']
              MaxAge: 3000
        LifecycleConfiguration:
          Rules:
            - Id: DeleteOldFiles
              Status: Enabled
              ExpirationInDays: 1
    
    # S3 버킷 정책 수정
    OcrStorageBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref OcrStorageBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Sid: AllowLambdaAccess
              Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
                - s3:ListBucket
              Resource:
                - !Sub ${OcrStorageBucket.Arn}/*
                - !Sub ${OcrStorageBucket.Arn}

package:
  patterns:
    - '!venv/**'
    - '!__pycache__/**'
    - '!*.pyc'
    - '!.git/**'
    - '!.gitignore'
    - '!.env'
    - '!.vscode/**'
    - '!.pytest_cache/**'
    - '!*.md'
    - '!requirements.txt'
    - '!serverless.yml'
    - 'fonts/NanumGothic.ttf'

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    useDownloadCache: true
    useStaticCache: true 